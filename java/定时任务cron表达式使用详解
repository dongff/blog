项目中有时会需要定时去触发一些任务，Java实现定时任务一般有三种方法：

    JDK自带的Timer以及JDK1.5+ 新增的ScheduledExecutorService；
    Quartz 定时器：简单却强大的JAVA作业调度框架
    Spring3.0以后自带的task任务调度 ：可以将它看成一个轻量级的Quartz，而且使用起来比Quartz简单许多；

//每小时
 @Scheduled(fixedDelay = 1000 * 60 * 60)
 //每到小时跑一次
  @Scheduled(cron = "0 0 * * * ?")
  
这里不去细谈三种定时任务实现的原理，可以自行去百度查看。下面主要说一下在设置定时任务时用到的cron表达式。Linux系统中内置cron进程，通过crontab命令可以查看和配置cron作业调度列表。
一、cron表达式结构

cron表达式是一个以5或6个空格隔开，分为6或7个域，每一个域代表一个含义的字符串。
cron有两种语法格式：
（1） Seconds Minutes Hours DayofMonth Month DayofWeek Year

（2）Seconds Minutes Hours DayofMonth Month DayofWeek
corn从左到右（用空格隔开）分别对应：秒 分 小时 月份中的日期 月份 星期中的日期 年份
二、字段含义
字段	允许的值和特殊字符
秒（Seconds）	0~59的整数 , - * / 四个字符
分（Minutes）	0~59的整数 , - * / 四个字符
小时（Hours）	0~23的整数 , - * / 四个字符
日期（DayofMonth）	1~31的整数（根据月份对应的天数决定） ,- * ? / L W C 八个字符
月份（Month）	1~12的整数或者 JAN-DEC , - * / 四个字符
星期（DayofWeek）	1~7的整数或者 SUN-SAT （1=SUN） , - * ? / L C # 八个字符
年(可选，留空)（Year）	1970~2099 , - * / 四个字符

特殊字符的含义：
（1）*:表示匹配该域的任意值。假如在Minutes域使用*, 即表示每分钟都会触发事件。

（2）?：只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 * ?, 其中最后一位只能用？，而不能使用*，如果使用*表示不管星期几都会触发，实际上并不是这样。

（3）-：表示范围。例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次

（4）/：表示起始时间开始触发，然后每隔固定时间触发一次。例如在Minutes域使用5/20,则意味着5分钟时触发一次每20分钟触发一次，例如25，45等分别触发一次.

（5）,：表示列出枚举值。例如：在Minutes域使用5,20，则意味着在5和20分时触发一次。

（6）L：表示最后，只能出现在DayofWeek和DayofMonth域。如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。

（7）W:表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 。

（8）LW:这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。

（9）#:用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。
三、常用例子

    0 * * * * ? 表示每分钟跑一次
    0 0/5 * * * ? 表示每五分钟跑一次
    0 0 * * * ? 表示每小时跑一次
    0 0 2 * * ? 表示每天凌晨两点跑一次
    0 5,15 9 * * ? 表示每天9点5分或者15分跑一次

四、推荐在线cron表达式生成工具

直接百度搜索cron表达式即可看到在线工具，使用这个工具就不用怕分不清表达式的意思或者不会写表达式了。放个链接：https://cron.qqe2.com/

原文链接：https://blog.csdn.net/qq_18547341/article/details/106279434
